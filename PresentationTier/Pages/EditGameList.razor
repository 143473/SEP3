@page "/EditGameList"

@using Presentation_Layer.Models
@using System.Security.Claims
@using Presentation_Layer.Authentication
@using Presentation_Layer.Data

@inject IGameService gameService
@inject IGameListService gameListService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider stateProvider

<h3>Edit Game List</h3>
<p class="actions">
    <button @onclick="@SuggestGame" class="btn btn-outline-secondary" type="submit">
            <i class="oi oi-plus"></i> Suggest a new game
    </button>
</p>

@if (ggl == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!ggl.Any())
{
    <p>
        <em>No ToDo items exist. Please add some.</em>
    </p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>In my Game List</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ggl)
            {
                <tr>
                    <td @onclick="@(() => MoreGameInfo(item.Id))"><a href="#">@item.Name</a></td>
                    <td>
                        <input type="checkbox" checked=@(gamesOfUser.FirstOrDefault(game => game.Id == item.Id) != null) @onchange="@(arg => CompletedChangeAsync(arg, item.Id))"/>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

    
<p class="actions">
        <button @onclick="@GoBack" class="btn btn-outline-secondary" type="submit">
            Go back
        </button>
</p>

@code {
    private IList<Game> ggl;
    private IList<Game> gamesOfUser;
    private string username;

    protected override async Task OnInitializedAsync()
    {
        ggl = await gameService.GetGGLAsync();
        username = ((CustomAuthenticationStateProvider) stateProvider).GetAuthenticationStateAsync().Result.User.FindFirst(claim => claim.Type.Equals(ClaimTypes.Name))?.Value;
        gamesOfUser = await gameListService.GetUserGamesAsync(username);
    }
    
    private async Task CompletedChangeAsync(ChangeEventArgs arg, int id)
    {
        var inList = arg.Value != null && (bool) arg.Value;
        await gameListService.UpdateUserGamesAsync(username, id, inList);
    }
    
    private void GoBack()
    {
        navigationManager.NavigateTo("GameList");
    }
    
    private void MoreGameInfo(int id)
    {
        navigationManager.NavigateTo($"GameInfo/{id}");
    }
    
    private void SuggestGame()
    {
        navigationManager.NavigateTo("CreateGame");
    }
}