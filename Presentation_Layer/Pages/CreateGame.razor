@page "/CreateGame"
@using Microsoft.AspNetCore.Components
@using Presentation_Layer.Data
@using Presentation_Layer.Models

@inject NavigationManager NavigationManager
@inject IGameService gameService

<h3>Create Game</h3>
<EditForm Model="@game" OnValidSubmit="@CreateAsOrganizer" Context="formContext">
    <DataAnnotationsValidator/>
    <div class="form-group">
        Name:<br/>
        <InputText @bind-Value="game.Name"/>
        <ValidationMessage For="@(() => game.Name)"/>
    </div>
    <div class="form-group">
        Complexity: 
        <InputNumber @bind-Value="game.Complexity" style="width: 50px"/>
        <ValidationMessage For="@(() => game.Complexity)"/>
    </div>
    <div class="form-group">
        Estimated time: 
        <InputNumber @bind-Value="game.TimeEstimation" style="width: 50px"/>
        <ValidationMessage For="@(() => game.TimeEstimation)"/>
    </div>
    <div class="form-group">
        Player amount:<br/>
        Min: <InputNumber @bind-Value="game.MinNumberOfPlayers" style="width: 50px"/>
        <ValidationMessage For="@(() => game.MinNumberOfPlayers)"/>-
        Max: <InputNumber @bind-Value="game.MaxNumberOfPlayers" style="width: 50px"/>
    </div>
    <div class="form-group">Short Description:<br/>
        <InputTextArea @bind-Value="game.ShortDescription" style="width: 250px"/>
    </div>
    <div class="form-group">
        Needed equipment:<br/>
        <InputTextArea @bind-Value="game.NeededEquipment" style="width: 250px"/>
    </div>
    <div class="form-group">
        Age range:<br/>
        Min: <InputNumber @bind-Value="game.MinAge" style="width: 50px"/>
        <ValidationMessage For="@(() => game.MinAge)"/> -
        Max: <InputNumber @bind-Value="game.MaxAge" style="width: 50px"/>
    </div>
    <div class="form-group">
        Tutorial:<br/> 
        <InputText @bind-Value="game.Tutorial" style="width: 250px"/>
    </div>
    
    <AuthorizeView Policy="Administrator" Context="authContext">
        <NotAuthorized>
            <p class="actions">
                <button type="submit" class="btn btn-outline-success">Create</button>
            </p> 
        </NotAuthorized>
        <Authorized>
            <p class="actions">
                <button type="submit" class="btn btn-outline-success">Create</button>
            </p> 
        </Authorized>
    </AuthorizeView>
    
    
</EditForm>

@code {
    private Game game = new();
    
    private async Task CreateAsOrganizer()
    {
        await gameService.AddGameAsync(game);
        NavigationManager.NavigateTo("EditGameList");
    }
    
    private async Task CreateAsAdministrator()
    {
        await gameService.CreateGameAsync(game);
        NavigationManager.NavigateTo("GGL");
    }
}