@page "/ManageAccount"
@using global::Data
@using Presentation_Layer.Authentication
@using System.Security.Claims

@inject IUserService UserService;
@inject AuthenticationStateProvider StateProvider

<h3>Manage Account</h3>

<p class="actions">
    <button class="btn btn-outline-danger" type="submit">Delete account</button>
</p>

<AuthorizeView Policy="Administrator">
<h3>Request for organizer</h3>
<p class="actions">
    <button class="btn btn-outline-success" type="submit">Accept</button>
</p>
<p class="actions">
    <button class="btn btn-outline-danger" type="submit">Decline</button>
</p>
</AuthorizeView>


<AuthorizeView Policy="Player">
    <p class="actions">
        
        <button class="btn btn-outline-primary" type="submit" @onclick="@RequestForOrganizer">Request for organizer</button>
    </p>
    <p>@confirmationMessage</p>
</AuthorizeView>



@code {
    private bool request;
    private string username;
    private string confirmationMessage;
    
    private async Task RequestForOrganizer()
    {
        request = true;
        username = ((CustomAuthenticationStateProvider) StateProvider).GetAuthenticationStateAsync().Result.User.FindFirst(claim => claim.Type.Equals(ClaimTypes.Name))?.Value;
        await UserService.RequestPromotionToOrganizer();
        confirmationMessage = "Request for organizer sent successfully.";
    }

}
