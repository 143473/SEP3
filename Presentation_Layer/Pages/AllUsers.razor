@page "/AllUsers"
@using Presentation_Layer.Models
@using Presentation_Layer.Authentication
@using System.Security.Claims
@using global::Data
@attribute [Authorize(Policy = "Administrator")]
@inject NavigationManager navigationManager

@inject IUserService userService;
@inject AuthenticationStateProvider stateProvider;


<h3>All Users</h3>
Requested promotion:
    <Select class="selectpicker" @oninput="@(FilterByPromotion)">
        <option value="false">-- All --</option>
        <option value="true">Requested promotion</option>
    </Select>

<ul>
@foreach (var user in filteredUsers)
{
    <li>
        <b @onclick="@(() => MoreUserInfo(user.Username))"><a href="#">@user.Username</a></b>
    </li>
}
</ul>




@code {
    private IList<User> allUsers  = new List<User>();
    private IList<User> filteredUsers = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        allUsers = await userService.GetUsersAsync();
        filteredUsers = allUsers;
        // foreach (var user in allUsers)
        // {
        //     filteredUsers.Add(user);
        // }
    }
    
    private async Task MoreUserInfo(string username)
    {
        navigationManager.NavigateTo($"UserInfo/{username}");
    }
    
    private async Task FilterByPromotion(ChangeEventArgs args)
    {
        Console.WriteLine("1: "+allUsers.Count);
        Console.WriteLine("2: "+allUsers.Count);
        if (args.Value.ToString().Equals("true"))
        {
            Console.WriteLine("selected promotion");
            Console.WriteLine("3: "+allUsers.Count);
            filteredUsers = allUsers.Where(user => user.RequestedPromotion == true).ToList();
            /*foreach (var user in allUsers)
            {
                Console.WriteLine("here");
                if (user.RequestedPromotion)
                {
                    Console.WriteLine("adding user to filtered users "+user.Username);
                    filteredUsers.Add(user);
                }
            }*/
        }
        else
        {
            Console.WriteLine("selected all");
            filteredUsers = allUsers;
        }
    }
    
}