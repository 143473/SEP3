@page "/EventInfo/{Id:int}"
@using Presentation_Layer.Models
@using Presentation_Layer.Data

@inject IParticipantService participantService;
@inject IOrganizerService organizerService;
@inject IEventService eventService;
@inject ICategoryService categoryService;
@inject IEventGameListService eventGameListService;

<h3>Event @selectedEvent.Name Info </h3>

<p>Time: @selectedEvent.StartTime - @selectedEvent.EndTime</p>
<p>Address: @selectedEvent.AddressStreetName, @selectedEvent.AddressStreetNumber, @selectedEvent.AddressApartmentNumber</p>
<p>Category: @category.Name </p>

<h3>Organizers</h3>
@foreach (string organizer in organizers)
{
    <ul>
        @if (organizer.Equals(selectedEvent.Organizer))
        {
            <li><b>@organizer</b></li>
        }
        else
        {
            <li>@organizer</li>
        }
    </ul>
}
<h3>Participants</h3>
@foreach (string participant in participants)
{
    <ul>
        <li>@participant</li>
    </ul>
}

<h3>Games</h3>
@foreach (Game game in allEventGameList)
{
    <ul>
        <li>@game.Name</li>
    </ul>
}

<p class="actions">
    <button class="btn btn-outline-success" type="submit">Join</button>
</p>

@code {
    [Parameter] public int Id { get; set; }
    private Event selectedEvent = new Event();
    private IList<string> participants = new List<string>();
    private IList<string> organizers = new List<string>();
    private IList<Category> categories = new List<Category>();
    private Category category = new Category();
    private IList<Game> allEventGameList = new List<Game>();

    protected override async Task OnInitializedAsync()
    {
        categories = await categoryService.GetCategoriesAsync();
        allEventGameList = await eventGameListService.GetAllEventGameListAsync(Id);
        selectedEvent = await eventService.GetEventAsync(Id);
        participants = await participantService.GetParticipantsAsync(Id);
        organizers = await organizerService.GetOrganizersAsync(Id);
        category =  categories.FirstOrDefault(a => a.Id == selectedEvent.EventCategory);
    }
}