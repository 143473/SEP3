@page "/UserInfo/{Username}"
@using Presentation_Layer.Models
@using global::Data
@using Presentation_Layer.Authentication

@inject IUserService UserService;
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<h3>@user.Username</h3>
@if (user.FirstName != null && user.LastName != null)
{
    <p>Name: @((user.FirstName != null) ? user.FirstName : "") @((user.LastName != null) ? user.LastName : "")</p>
}
<p>Role: @((user.Role == 3) ? "Organizer" : "Player")</p>
@if (user.PhoneNumber != null)
{
    <p>Phone: @(user.PhoneCountryCode != null ? user.PhoneCountryCode : "") @user.PhoneNumber</p>
}
@if (user.EmailAddress != null)
{
    <p>Email: @user.EmailAddress</p>
}



@code {
    [Parameter]
    public string Username { get; set; }
    private User user = new User();
    protected override async Task OnInitializedAsync()
    {
        user = await UserService.GetUserByUsernameAsync(Username);
    }
    private async Task Delete()
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm","Are you sure you want to delete this account?"))
            return;
        try
        {
            await UserService.DeleteAccountAsync(Username);
            NavigationManager.NavigateTo("/");
        }
        catch(Exception){}
    }
    
}